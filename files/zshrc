# ARCH
ARCH=`arch`
BREW_DIR=".homebrew_$ARCH"

## colors format: http://misc.flogisoft.com/bash/tip_colors_and_formatting

## color list:
#    $ wget https://github.com/zhengkai/config/raw/master/script/256colors2.pl
#    $ perl ./256colors2.plttps://gist.github.com/clairvy/566623

# %{...%} は囲まれた文字列がエスケープシーケンスであることを明示する
# これをしないと右プロンプトの位置がずれる => タブ補完したとき悲惨なことになる

setopt prompt_subst
local p_color_orange=$'%{\e[38;5;215m%}'
# local p_color_reset=$'\e[m'
local p_color_reset_bg=$'%{\e[49m%}'
local p_color_reset_fg=$'%{\e[39m%}'
local p_color_reset_all="$p_color_reset_fg$p_color_reset_bg"

# local p_cdir_color_fg=$'%{\e[38;5;15m%}'
# local p_cdir_color_bg=$'%{\e[48;5;17m%}'
local p_cdir_end_color_fg=$'%{\e[38;5;17m%}'

# local p_cdir="$p_cdir_color_bg%F{blue}⮀%f %~ $p_color_reset_bg$p_cdir_end_color_fg"
# local p_cdir="$p_cdir_color_bg%F{blue}⮀%f %d $p_color_reset_bg$p_cdir_end_color_fg"
# local p_cdir="%F{blue}⮀%f %d $p_cdir_end_color_fg"
local p_cdir="%F{magenta}╥  %F{green}%~%f$p_cdir_end_color_fg"
local p_cdir_full="[%F{green}%d%f]"
# local p_cdir_end="⮀"$'\n'
local p_cdir_end=""$'\n'

# local p_host="FFR-41MR"

local p_host="$p_color_orange%m$p_color_reset_fg"
local p_user="$p_color_orange%n$p_color_reset_fg"
local p_info="$p_color_reset_all%F{magenta}╚  %f$p_user@$p_host"
# local p_info="%F{red}♺ %f $p_user@$p_host"
local p_mark="%B%(!,#,$)%b"
# local p_mark="%#"

# export SUDO_PROMPT="[sudo] Enter correct password:"

# 環境変数 SSH_CLIENT があるかチェックする
if [[ -z ${SSH_CLIENT} ]]; then
    local p_remote=""
else
    local p_remote="[%F{green}SSH%f]"
fi

# 環境変数 PIPENV_ACTIVE があるかチェックする
if [[ -z ${PIPENV_ACTIVE} ]]; then
    local p_remote=""
else
    local p_remote="[%F{green}PIPENV%f]"
fi
local p_arch="[%F{magenta}$ARCH%f]"
local p_base="$p_info$p_arch$p_remote:$p_mark "
PROMPT=$p_cdir$p_cdir_end$p_base
source $HOME/.zsh/git-prompt.zsh
RPROMPT="$p_cdir_full"

autoload -U compinit
compinit -u

if [ -e $HOME/$BREW_DIR/Caskroom/google-cloud-sdk/latest/google-cloud-sdk/path.zsh.inc ]; then
    source $HOME/$BREW_DIR/Caskroom/google-cloud-sdk/latest/google-cloud-sdk/path.zsh.inc
fi
if [ -e $HOME/$BREW_DIR/Caskroom/google-cloud-sdk/latest/google-cloud-sdk/completion.zsh.inc ]; then
    source $HOME/$BREW_DIR/Caskroom/google-cloud-sdk/latest/google-cloud-sdk/completion.zsh.inc
fi

zstyle ':completion:*' list-colors 'di=36' 'ln=35' 'ex=31'
zstyle ':completion:*:default' menu select=1
zstyle ':completion:*' matcher-list 'm:{a-z}={A-Z} r:|[.]=**'

# pip zsh completion start
function _pip_completion {
    local words cword
    read -Ac words
    read -cn cword
    reply=( $( COMP_WORDS="$words[*]" \
               COMP_CWORD=$(( cword-1 )) \
               PIP_AUTO_COMPLETE=1 $words[1] ) )
}
compctl -K _pip_completion pip
# pip zsh completion end

alias ls="ls -GFh"
alias ll="ls -l"
alias la="ls -al"
alias tma="tmux a"
alias ping="ping -t 3"
alias w3m="cd $HOME;WWW_HOME='google.co.jp' w3m; cd -;"
alias ltail="less +F"
alias dmg_mount="hdiutil attach"
# alias vi="vim"

setopt hist_ignore_dups
setopt share_history
setopt auto_pushd
setopt pushd_ignore_dups
setopt extended_history
setopt auto_remove_slash
setopt correct
setopt complete_aliases
setopt complete_in_word
setopt transient_rprompt
setopt interactive_comments
setopt magic_equal_subst

# eval "$(rbenv init -)"
eval "$(pyenv init -)"

# function llast(){
#     if ls /var/tmp/.last_log* > /dev/null 2>&1; then
#         # cat $HOME/.last_log /var/tmp/.last_log* | tail -r $* | less
#         cat $HOME/.last_log /var/tmp/.last_log* | tail -n 30 $* | less
#     else
#         # tail -r $* $HOME/.last_log | less
#         tail -n 30 $* $HOME/.last_log | less
#     fi
# }

# function gem(){
#     $HOME/.rbenv/shims/gem $*
#     if [ "$1" = "install" ] || [ "$1" = "i" ] || [ "$1" = "uninstall" ] || [ "$1" = "uni" ]; then
#         rbenv rehash
#         rehash
#     fi
# }

# for Mac OS X
case ${OSTYPE} in darwin*)
    # alias tmux="SHELL=$HOME/$BREW_DIR/bin/zsh tmux"
    source "$HOME/$BREW_DIR/share/zsh-syntax-highlighting/zsh-syntax-highlighting.zsh"

    function brew(){
        $HOME/$BREW_DIR/bin/brew $*
        if [ "$1" = "install" ] || [ "$1" = "upgrade" ] || [ "$1" = "uninstall" ]; then
            rehash
        fi
    }

    # export PATH="$HOME/$BREW_DIR/opt/gettext/bin:$PATH"
    # export PATH="/usr/local/gettext/0_19_8_1/bin:$PATH"
    ;;
esac

# for python
export PYTHON_CONFIGURE_OPTS='--enable-unicode=ucs4'
export CLOUDSDK_PYTHON=/usr/bin/python3

typeset -U path cdpath fpath manpath

# ulimit -n 1024
